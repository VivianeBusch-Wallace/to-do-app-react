{"version":3,"sources":["components/Header.js","components/Footer.js","components/InputArea.js","components/ToDoList.js","App.js","index.js"],"names":["Header","Footer","year","Date","getFullYear","HandleInput","props","useState","userInput","setUserInput","onSubmit","e","preventDefault","length","setList","prevState","id","uuidv4","title","trim","done","priority","type","value","onChange","target","ToDoList","userTodos","list","map","toDo","i","defaultChecked","check","onClick","remove","App","className","itemToRemove","newToDoList","filter","item","statusChecked","itemToCheck","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAQeA,EARA,WACb,OACE,8BACE,kECMSC,EATA,WACb,IAAIC,GAAO,IAAIC,MAAOC,cACtB,OACE,8BACE,iDAAiBF,Q,eCgCRG,MA9Bf,SAAqBC,GAEnB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAoBA,OACE,uBAAMC,SAfR,SAAmBC,GAEjBA,EAAEC,iBAEEJ,EAAUK,QAEZP,EAAMQ,SAAQ,SAACC,GAAD,4BACTA,GADS,CAEZ,CAAEC,GAAIC,cAAUC,MAAOV,EAAUW,OAAQC,MAAM,EAAOC,SAAU,QAIpEZ,EAAa,KAGb,UACE,uBAAOa,KAAK,OAAOC,MAAOf,EAAWgB,SApBzC,SAA0Bb,GACxBF,EAAaE,EAAEc,OAAOF,UAoBpB,uBAAOD,KAAK,SAASC,MAAM,oBCLlBG,EAzBE,SAACpB,GAChB,IAAMqB,EAAYrB,EAAMsB,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC/B,+BAEE,uBACET,KAAK,WACLU,eAAgBF,EAAKV,KACrBI,SAAU,kBAAMlB,EAAM2B,MAAMH,EAAKd,OAElCc,EAAKZ,MACN,iDAAoBY,EAAKT,SAAzB,QAEA,mBACEa,QAAS,WAEP5B,EAAM6B,OAAOL,EAAKd,KAHtB,4BAVOe,MAoBX,OAAO,6BAAKJ,KCqBCS,MAnCf,WAEE,MAAwB7B,mBAAS,IAAjC,mBAAOqB,EAAP,KAAad,EAAb,KAuBA,OACE,sBAAKuB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAavB,QAASA,IACtB,cAAC,EAAD,CAAUc,KAAMA,EAAMO,OAxBX,SAACG,GAGd,IAAMC,EAAcX,EAAKY,QAAO,SAACC,GAAD,OAAUA,EAAKzB,KAAOsB,KAEtDxB,EAAQyB,IAmBgCG,cAfpB,SAACC,GAErB7B,GAAQ,SAAC8B,GAEP,OAAOA,EAAMJ,QAAO,SAACC,GAEnB,OADIA,EAAKzB,KAAO2B,IAAaF,EAAKrB,MAAQqB,EAAKrB,MACxCqB,WAUT,cAAC,EAAD,Q,MC/BNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7aeda62c.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div>\n      <h1>What do you plan to do today?</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  let year = new Date().getFullYear();\n  return (\n    <div>\n      <h4>Copyrights Â®{year}</h4>\n    </div>\n  );\n};\n\nexport default Footer;\n","// import useState from React >>\nimport { useState } from \"react\";\n\n// import unique universal identifier from package >>\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction HandleInput(props) {\n  // set useState >>\n  const [userInput, setUserInput] = useState(\"\");\n  // target user input with useState >>\n  function userInputChanges(e) {\n    setUserInput(e.target.value);\n  }\n  // add the input into the object array of todos >>\n  function addToList(e) {\n    // prevent default of form >>\n    e.preventDefault();\n    //make sure the input is not processed when it's empty with an if condition >>\n    if (userInput.length) {\n      // to ensure we don't replace the old listitem with the new >>\n      props.setList((prevState) => [\n        ...prevState,\n        { id: uuidv4(), title: userInput.trim(), done: false, priority: 0 },\n      ]);\n    }\n    // clear userInput on submit\n    setUserInput(\"\");\n  }\n  return (\n    <form onSubmit={addToList}>\n      <input type=\"text\" value={userInput} onChange={userInputChanges} />\n      <input type=\"submit\" value=\"Add to List\" />\n    </form>\n  );\n}\n\nexport default HandleInput;\n","// this is the todo list we actually see in the browser using the data we sent with each submit >>\nconst ToDoList = (props) => {\n  const userTodos = props.list.map((toDo, i) => (\n    <li key={i}>\n      {/* << each repetitive item in react should have a key, it is enough if key is put into li, then the content does not need it */}\n      <input\n        type=\"checkbox\"\n        defaultChecked={toDo.done}\n        onChange={() => props.check(toDo.id)}\n      />\n      {toDo.title}\n      <span> | priority: {toDo.priority} |</span>\n      {/* remove the listitem on click of icon >> */}\n      <i\n        onClick={() => {\n          //   console.log(toDo.id);\n          props.remove(toDo.id);\n        }}\n      >\n        ðŸ—‘\n      </i>\n    </li>\n  ));\n  return <ul>{userTodos}</ul>;\n};\n\nexport default ToDoList;\n","// importing useState and React\nimport React, { useState } from \"react\";\n\n// Importing components\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HandleInput from \"./components/InputArea\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  // useState for the list of todos >>\n  const [list, setList] = useState([]);\n\n  // function to remove a listitem on click of trashcan (see function call in ToDoList.js) >>\n  const remove = (itemToRemove) => {\n    // << itemToRemove is the id of the clicked list item\n    // all items that do not match this id will be put into a new array which will replace the old list >>\n    const newToDoList = list.filter((item) => item.id !== itemToRemove);\n    // setList now receives the new array >>\n    setList(newToDoList);\n  };\n\n  // function to mark the todo as finished >>\n  const statusChecked = (itemToCheck) => {\n    // << itemToCheck receives the id for that specific item from ToDoList.js\n    setList((items) => {\n      // this returns the item which matches the id of the checked/unchecked item and toggles the checked Status >>\n      return items.filter((item) => {\n        if (item.id === itemToCheck) item.done = !item.done;\n        return item;\n      });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <HandleInput setList={setList} />\n      <ToDoList list={list} remove={remove} statusChecked={statusChecked} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n// sass styles >>\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}